AWSTemplateFormatVersion: '2010-09-09'
Description: 'Terraform remote state backend - S3 bucket and DynamoDB table'

Parameters:
  ProjectName:
    Type: String
    Default: cwc-service
    Description: Project name for resource naming

Resources:
  RandomSuffix:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt RandomFunction.Arn

  RandomFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.9
      Handler: index.handler
      Code:
        ZipFile: |
          import random
          import string
          import cfnresponse
          def handler(event, context):
              if event['RequestType'] == 'Create':
                  random_id = ''.join(random.choices(string.ascii_lowercase + string.digits, k=8))
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {'RandomId': random_id})
              else:
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
      Role: !GetAtt LambdaRole.Arn

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  TerraformStateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-terraform-state-${RandomSuffix.RandomId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  TerraformStateLockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-terraform-locks'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH

Outputs:
  S3BucketName:
    Description: 'S3 bucket name for Terraform state'
    Value: !Ref TerraformStateBucket
    Export:
      Name: !Sub '${AWS::StackName}-S3BucketName'

  DynamoDBTableName:
    Description: 'DynamoDB table name for Terraform state locking'
    Value: !Ref TerraformStateLockTable
    Export:
      Name: !Sub '${AWS::StackName}-DynamoDBTableName'